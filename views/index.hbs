	<!DOCTYPE>
<html>
	{{> head_tag title="RateMyTJ"}}
	<body>
		<div class="min-h-full flex flex-col">
			{{> header}}
			<div class="flex flex-col md:flex-row md:p-2 flex-grow">
				<div class="leading-tight hidden md:pr-2 w-full h-full md:w-52" id="filter_div">
					<div class="w-full flex flex-row font-semibold items-center justify-center text-center text-2xl" id="filter_button">
						<div class="hidden md:block">
							Filters
						</div>
						<div class="w-full pt-2.5 pb-2 text-center block z-20 bg-white cursor-pointer md:hidden flex flex-row items-center justify-center drop-shadow-md" onclick="toggle_filters()" id="filter_mobile">
							Filters
							<div class="flex items-center align-center px-1 block md:hidden">
								<img src="/img/caret-up-solid.png" width="13" height="13" id="filter_arrow">
							</div>
						</div>
					</div>
					<div class="hidden p-2 md:p-0 z-10 fixed filters_width md:static md:block md:z-0 w-full bg-white overflow-y-auto md:overflow-y-visible drop-shadow-md md:drop-shadow-none rounded-b-2xl md:rounded-none" id="actual_filters">
						<div>
							<span class="text-xs underline"><a onclick="reset_filters()">Reset all filters</a></span><br>
							<b>Category:</b><br>
							<span class="text-xs"><a onclick="switchCategory(false)" class="underline">Uncheck all</a> | <a onclick="switchCategory(true)" class="underline">Check all</a></span><br>
							<input type="checkbox" class="mr-0.5" value="Engineering" checked id="Engineering" onclick="filterChange(3)"><label for="Engineering">Engineering</label><br>
							<input type="checkbox" class="mr-0.5" value="English" checked id="English" onclick="filterChange(3)"><label for="English">English</label><br>
							<input type="checkbox" class="mr-0.5" value="Fine Arts: Music" checked id="Fine Arts: Music" onclick="filterChange(3)"><label for="Fine Arts: Music">Fine Arts: Music</label><br>
							<input type="checkbox" class="mr-0.5" value="Fine Arts: Theatre Arts" checked id="Fine Arts: Theatre Arts" onclick="filterChange(3)"><label for="Fine Arts: Theatre Arts">Fine Arts: Theatre Arts</label><br>
							<input type="checkbox" class="mr-0.5" value="Fine Arts: Visual Arts" checked id="Fine Arts: Visual Arts" onclick="filterChange(3)"><label for="Fine Arts: Visual Arts">Fine Arts: Visual Arts</label><br>
							<input type="checkbox" class="mr-0.5" value="General" checked id="General" onclick="filterChange(3)"><label for="General">General</label><br>
							<input type="checkbox" class="mr-0.5" value="Health/PE" checked id="Health/PE" onclick="filterChange(3)"><label for="Health/PE">Health/PE</label><br>
							<input type="checkbox" class="mr-0.5" value="Mathematics" checked id="Mathematics" onclick="filterChange(3)"><label for="Mathematics">Mathematics</label><br>
							<input type="checkbox" class="mr-0.5" value="Science" checked id="Science" onclick="filterChange(3)"><label for="Science">Science</label><br>
							<input type="checkbox" class="mr-0.5" value="Social Studies" checked id="Social Studies" onclick="filterChange(3)"><label for="Social Studies">Social Studies</label><br>
							<input type="checkbox" class="mr-0.5" value="World Languages" checked id="World Languages" onclick="filterChange(3)"><label for="World Languages">World Languages</label><br>
						</div>
						<div class="pt-2.5">
							<b>Type:</b><br>
							<input type="checkbox" class="mr-0.5" name="Core" checked onclick="filterChange(4)" id="Core"><label for="Core">Core</label><br>
							<input type="checkbox" class="mr-0.5" name="Elective" checked onclick="filterChange(4)" id="Elective"><label for="Elective">Elective</label><br>
						</div>
						<div class="pt-2.5">
							<b>Length:</b><br>
							<input type="checkbox" class="mr-0.5" name="FullYear" checked onclick="filterChange(5)" id="Full Year"><label for="Full Year">Full Year</label><br>
							<input type="checkbox" class="mr-0.5" name="Semester" checked onclick="filterChange(5)" id="Semester"><label for="Semester">Semester</label><br>
						</div>
						<div class="pt-2.5">
							<b>Weight:</b><br>
							<input type="checkbox" class="mr-0.5" name="Regular" checked onclick="filterChange(6)" id="+0.0"><label for="+0.0">Regular (+0.0)</label><br>
							<input type="checkbox" class="mr-0.5" name="Honors" checked onclick="filterChange(6)" id="+0.5"><label for="+0.5">Honors (+0.5)</label><br>
							<input type="checkbox" class="mr-0.5" name="AP" checked onclick="filterChange(6)" id="+1.0"><label for="+1.0">AP/Post-AP (+1.0)</label><br>
						</div>
						<div class="pt-2.5">
							<b>Display:</b><br>
							<input type="radio" class="mr-0.5" id="show_all" name="show" checked oninput="show_all_classes()" value="true"><label for="show_all">All Classes</label><br>
							<input type="radio" class="mr-0.5" id="show_only" name="show" oninput="show_all_classes()" value="false"><label for="show_only">Only Classes with Reviews</label>
						</div>
						<div class="pr-6 pl-4 text-center">
							<div>
								<div class="pt-2.5">
									<b>Class Score:</b><br>
									<div class="flex flex-row pb-2 items-center justify-center">
										<input type="number" class="border-2 border-gray-500 w-16 pl-1" name="MinClassScore" checked id="minclassscore" onkeyup="filterNumber(this.id, 8)" onclick="filterNumber(this.id, 8)" min="0" max="10">
										<span>&nbsp;-&nbsp;</span>
										<input type="number" class="border-2 border-gray-500 w-16 pl-1" name="MaxClassScore" checked id="maxclassscore" onkeyup="filterNumber(this.id, 8)" onclick="filterNumber(this.id, 8)" min="0" max="10">
									</div>
								</div>
								<div id="class_score_slider" style="height:10px;"></div>
							</div>
							<div>
								<div class="pt-2.5">
									<b>Hours/Week:</b><br>
									<div class="flex flex-row pb-2 items-center justify-center">
										<input type="number" class="border-2 border-gray-500 w-16 pl-1" name="MinHrsWeek" checked id="minhrsweek" onkeyup="filterNumber(this.id, 9)" onclick="filterNumber(this.id, 9)" min="0" max="10">
										<span>&nbsp;-&nbsp;</span>
										<input type="number" class="border-2 border-gray-500 w-16 pl-1" name="MaxHrsWeek" checked id="maxhrsweek" onkeyup="filterNumber(this.id, 9)" onclick="filterNumber(this.id, 9)" min="0" max="10">
									</div>
								</div>
								<div id="workload_slider" style="height:10px;"></div>
							</div>
							<div>
								<div class="pt-2.5">
									<b>Difficulty:</b><br>
									<div class="flex flex-row pb-2 items-center justify-center">
										<input type="number" class="border-2 border-gray-500 w-16 pl-1" name="MinDifficulty" checked id="mindifficulty" onkeyup="filterNumber(this.id, 10)" onclick="filterNumber(this.id, 10)" min="0" max="10">
										<span>&nbsp;-&nbsp;</span>
										<input type="number" class="border-2 border-gray-500 w-16 pl-1" name="MaxDifficulty" checked id="maxdifficulty" onkeyup="filterNumber(this.id, 10)" onclick="filterNumber(this.id, 10)" min="0" max="10">
									</div>
								</div>
								<div id="difficulty_slider" style="height:10px;"></div>
							</div>
							<div>
								<div class="pt-2.5">
									<b>Enjoyment:</b><br>
									<div class="flex flex-row pb-2 items-center justify-center">
										<input type="number" class="border-2 border-gray-500 w-16 pl-1" name="MinEnjoyment" checked id="minenjoyment" onkeyup="filterNumber(this.id, 11)" onclick="filterNumber(this.id, 11)" min="0" max="10">
										<span>&nbsp;-&nbsp;</span>
										<input type="number" class="border-2 border-gray-500 w-16 pl-1" name="MaxEnjoyment" checked id="maxenjoyment" onkeyup="filterNumber(this.id, 11)" onclick="filterNumber(this.id, 11)" min="0" max="10">
									</div>
								</div>
								<div id="enjoyment_slider" style="height:10px;"></div>
							</div>
							<div>
								<div class="pt-2.5">
									<b>Teacher Score:</b><br>
									<div class="flex flex-row pb-2 items-center justify-center">
										<input type="number" class="border-2 border-gray-500 w-16 pl-1" name="MinTeacherScore" checked id="minteacherscore" onkeyup="filterNumber(this.id, 12)" onclick="filterNumber(this.id, 12)" min="0" max="10">
										<span>&nbsp;-&nbsp;</span>
										<input type="number" class="border-2 border-gray-500 w-16 px-0.5" name="MaxTeacherScore" checked id="maxteacherscore" onkeyup="filterNumber(this.id, 12)" onclick="filterNumber(this.id, 12)" min="0" max="10">
									</div>
								</div>
								<div id="teacherscore_slider" style="height:10px;"></div>
							</div>
							<div>
								<div class="pt-2.5">
									<b>Average Grade:</b><br>
									<div class="flex flex-row pb-2 items-center justify-center">
										<input type="number" class="border-2 border-gray-500 w-16 pl-1" name="MinGrade" checked id="mingrade" onkeyup="filterNumber(this.id, 13)" onclick="filterNumber(this.id, 13)" min="0" max="100">
										<span>&nbsp;-&nbsp;</span>
										<input type="number" class="border-2 border-gray-500 w-16 pl-1" name="MaxGrade" checked id="maxgrade" onkeyup="filterNumber(this.id, 13)" onclick="filterNumber(this.id, 13)" min="0" max="100">
									</div>
								</div>
								<div id="grade_slider" style="height:10px;"></div>
							</div>
						</div>
					</div>
				</div>
				<div class="index_div relative md:static pt-2 md:pt-0" id="index_div_id">
					<div id="classes_div" class="w-full overflow-x-auto hidden">
						<table id="classes_table" class="display w-full m-0" style="width:100%">
							<thead>
								<tr class="text-sm">
									<th>Class Name</th>
									<th>Alternate</th>
									<th class="text-center">ID</th>
									<th class="text-center">Category</th>
									<th class="text-center">Type</th>
									<th class="text-center">Length</th>
									<th class="text-center">Weight</th>
									<th title="Number of students that have inputted data for this class">#</th>
									<th title="Overall rating of the class, scale of 0(Awful)-10(Best)">Class Score</th>
									<th title="Average amount of time spent on HW in this class per week">Workload</th>
									<th title="Overall difficulty of the class, scale of 0(Easy)-10(Hard)">Difficulty</th>
									<th title="Overall enjoyment of the class, scale of 0(No enjoyment)-10(Very enjoyable)">Enjoyment</th>
									<th title="Overall rating of the teacher, scale of 0(Awful)-10(Best)">Teacher Score</th>
									<th title="Average grade of the students (Number of responses)">Grade</th>
								</tr>
							</thead>
							<tbody>
								{{#each classes}}
								<tr>
									<td class="nopadding"><a href="/class/{{this.id}}"><div class="text-black no-underline w-full h-full px-2.5 py-2">{{this.name}}</div></a></td>
									<td class="nopadding"><a href="/class/{{this.id}}"><div class="text-black no-underline w-full h-full px-2.5 py-2">{{this.alt}}</div></a></td>
									<td class="text-center nopadding"><a href="/class/{{this.id}}"><div class="text-black no-underline w-full h-full px-2.5 py-2">{{this.id}}</div></a></td>
									<td class="text-center nopadding"><a href="/class/{{this.id}}"><div class="text-black no-underline w-full h-full px-2.5 py-2">{{this.category}}</div></a></td>
									<td class="text-center nopadding"><a href="/class/{{this.id}}"><div class="text-black no-underline w-full h-full px-2.5 py-2">{{this.type}}</div></a></td>
									<td class="text-center nopadding"><a href="/class/{{this.id}}"><div class="text-black no-underline w-full h-full px-2.5 py-2">{{this.length}}</div></a></td>
									<td class="text-center nopadding"><a href="/class/{{this.id}}"><div class="text-black no-underline w-full h-full px-2.5 py-2">{{this.weight}}</div></a></td>
									<td class="text-center">{{this.total}}</td>
									<td class="text-center">{{#if this.total}} {{fix_number this.class_score}} {{else}} {{/if}}</td>
									<td class="text-center">{{#if this.total}} {{fix_number this.workload}} {{else}} {{/if}}</td>
									<td class="text-center">{{#if this.total}} {{fix_number this.difficulty}} {{else}} {{/if}}</td>
									<td class="text-center">{{#if this.total}} {{fix_number this.enjoyment}} {{else}} {{/if}}</td>
									<td class="text-center">{{#if this.total}} {{fix_number this.teacher_score}} {{else}} {{/if}}</td>
									<td class="text-center" data-order="{{#if this.grade_inputs}}{{this.grade}}{{else}}{{/if}}">{{#if this.grade_inputs}}{{fix_number this.grade}} ({{this.grade_inputs}}) {{else}} {{/if}}</td>
								</tr>
								{{/each}}
							</tbody>
						</table>
					</div>
				</div>
			</div>
			{{> footer}}
		</div>
		<script type="text/javascript">
			let filter_menu = false
			let change_filter = false
			let change_number = false
			let change_all = false
			function toggle_filters() {
				if (filter_menu) {
					filter_menu = false
					table.order([0, 'asc'])
					table.search('')

					if (change_filter) filterChange(3)
					if (change_number) filterNumber('minclassscore', 8)
					if (change_all) show_all_classes()

					change_filter = false
					change_number = false
					change_all = false
				}
				else {
					filter_menu = true
				}

				document.getElementById("actual_filters").scrollTop = 0
				if(document.body.scrollTop > document.getElementById('header').offsetHeight || document.documentElement.scrollTop > document.getElementById('header').offsetHeight) {
					document.getElementById("actual_filters").classList.toggle("top-12")
					document.getElementById("actual_filters").classList.add("fixed")
				}
				else {
					document.getElementById("actual_filters").classList.remove("top-12")
					document.getElementById("actual_filters").classList.remove("fixed")
				}
				document.getElementById("actual_filters").classList.toggle("hidden")
				// document.getElementById("actual_filters").classList.toggle("filters_animation")
				if (document.getElementById("filter_arrow").getAttribute('src').indexOf('up') !== -1) {
					document.getElementById("filter_arrow").setAttribute('src', '/img/caret-down-solid.png')
				}
				else {
					document.getElementById("filter_arrow").setAttribute('src', '/img/caret-up-solid.png')
				}
				document.body.classList.toggle("overflow-x-hidden")
				document.body.classList.toggle("overflow-y-hidden")
				document.getElementById("classes_div").classList.toggle("overflow-x-auto")
				document.getElementById("classes_div").classList.toggle("overflow-x-hidden")
				document.getElementById("index_div_id").classList.toggle("blur-lg")
			}

			let __emptyOnTop = function(a, b, high) {
				a = parseFloat(a || high);
				b = parseFloat(b || high);
				return ((a < b) ? -1 : ((a > b) ? 1 : 0));
			}

			jQuery.extend( jQuery.fn.dataTableExt.oSort, {
				"empty-on-top-asc": function (a, b) {
					return __emptyOnTop(a, b, Number.NEGATIVE_INFINITY) * -1
				},
				"empty-on-top-desc": function (a, b) {
					return __emptyOnTop(a, b, Number.POSITIVE_INFINITY)
				},
				"empty-on-top-reverse-asc": function (a, b) {
					return __emptyOnTop(a, b, Number.POSITIVE_INFINITY)
				},
				"empty-on-top-reverse-desc": function (a, b) {
					return __emptyOnTop(a, b, Number.NEGATIVE_INFINITY) * -1
				}
			});

			let table = $('#classes_table').DataTable( {
				// 'scrollX': true,
				'columnDefs': [
					{
						'searchable'    : false,
						'targets'       : [3,4,5,6,7,8,9,10,11,12,13]
					},
					{
						'targets'		: [1],
						'visible'		: false
					},
					{
						targets: [8,11,12,13],
						type: 'empty-on-top'
					},
					{
						targets: [9,10],
						type: 'empty-on-top-reverse'
					},
					{
						targets: [0],
            			orderData: [0, 6]
					},
					{
						targets: [3],
            			orderData: [3, 0]
					},
					{
						targets: [4],
            			orderData: [4, 0]
					},
					{
						targets: [5],
            			orderData: [5, 0]
					},
					{
						targets: [6],
            			orderData: [6, 0]
					},
					{
						targets: [7],
            			orderData: [7, 0]
					},
					{
						targets: [8],
            			orderData: [8, 7, 0]
					},
					{
						targets: [9],
            			orderData: [9, 7, 0]
					},
					{
						targets: [10],
            			orderData: [10, 7, 0]
					},
					{
						targets: [11],
            			orderData: [11, 7, 0]
					},
					{
						targets: [12],
            			orderData: [12, 7, 0]
					},
					{
						targets: [13],
            			orderData: [13, 7, 0]
					},
					{ "width": '200px', "targets": 0 },
					{ "width": '100px', "targets": 3 },
					{ "width": '60px', "targets": 13 }
				],
				"iDisplayLength": 50,
				"language": {
					"infoFiltered": ""
				},
				"initComplete": function( settings, json ) {
					let api = this.api()
					$('#classes_div').removeClass('hidden');
					$('#filter_div').removeClass('hidden');
					api.columns.adjust().draw()
				}
			} );

			function reset_filters() {
				document.getElementById("Engineering").checked = true
				document.getElementById("English").checked = true
				document.getElementById("Fine Arts: Music").checked = true
				document.getElementById("Fine Arts: Theatre Arts").checked = true
				document.getElementById("Fine Arts: Visual Arts").checked = true
				document.getElementById("General").checked = true
				document.getElementById("Health/PE").checked = true
				document.getElementById("Mathematics").checked = true
				document.getElementById("Science").checked = true
				document.getElementById("Social Studies").checked = true
				document.getElementById("World Languages").checked = true

				document.getElementById("Core").checked = true
				document.getElementById("Elective").checked = true

				document.getElementById("Full Year").checked = true
				document.getElementById("Semester").checked = true

				document.getElementById("+0.0").checked = true
				document.getElementById("+0.5").checked = true
				document.getElementById("+1.0").checked = true

				document.getElementById("show_all").checked = true
				document.getElementById("show_only").checked = false

				class_score_slider.noUiSlider.set([0, 10])
				workload_slider.noUiSlider.set([0, 10])
				difficulty_slider.noUiSlider.set([0, 10])
				enjoyment_slider.noUiSlider.set([0, 10])
				teacherscore_slider.noUiSlider.set([0, 10])
				grade_slider.noUiSlider.set([0, 100])

				if (!filter_menu) {
					table.search('').draw()
					table.order([0, 'asc'])
					table.columns.adjust().draw()
					filterChange(3)
				}
			}

			function switchCategory(state) {
				document.getElementById("Engineering").checked = state
				document.getElementById("English").checked = state
				document.getElementById("Fine Arts: Music").checked = state
				document.getElementById("Fine Arts: Theatre Arts").checked = state
				document.getElementById("Fine Arts: Visual Arts").checked = state
				document.getElementById("General").checked = state
				document.getElementById("Health/PE").checked = state
				document.getElementById("Mathematics").checked = state
				document.getElementById("Science").checked = state
				document.getElementById("Social Studies").checked = state
				document.getElementById("World Languages").checked = state
				filterChange(3)
			}

			function filterChange(row_index) {
				if (!filter_menu) {
					$.fn.dataTable.ext.search.push(
						function( settings, searchData, index, rowData, counter ) {
							return document.getElementById(rowData[row_index].substring(rowData[row_index].indexOf('>', 30)+1, rowData[row_index].indexOf('<', 30))).checked ? true : false
						}
					);
					table.draw()
				}
				else {
					change_filter = true
				}
			}

			function filterNumber(element_id, row_index) {
				if (!filter_menu) {
					$.fn.dataTable.ext.search.push(
						function( settings, searchData, index, rowData, counter ) {
							let min = parseFloat(document.getElementById('min' + element_id.substring(3)).value)
							let max = parseFloat(document.getElementById('max' + element_id.substring(3)).value)
							let score = parseFloat(rowData[row_index])
							if (rowData[row_index]['@data-order'] !== undefined) {
								score = parseFloat(rowData[row_index]['@data-order'])
							}

							if ((isNaN(min) || min === 0) && isNaN(score)) {
								return true;
							}
							if ((isNaN(min) && isNaN(max)) || (isNaN(min) && score <= max) || (min <= score && isNaN(max)) || (min <= score && score <= max)) {
								return true;
							}
							return false;
						}
					);
					table.draw()
				}
				else {
					change_number = true
				}
			}

			function show_all_classes() {
				if (!filter_menu) {
					$.fn.dataTable.ext.search.push(
						function( settings, searchData, index, rowData, counter ) {
							return parseInt(rowData[7]) > 0 || document.getElementById('show_all').checked ? true : false
						}
					);
					table.draw()
				}
				else {
					change_all = true
				}
			}

			let class_score_slider = document.getElementById('class_score_slider');
			noUiSlider.create(class_score_slider, {
				start: [0, 10],
				connect: true,
				range: {
					'min': 0,
					'max': 10
				}
			});
			let class_score_input_min = document.getElementById('minclassscore');
			class_score_slider.noUiSlider.on('update', function (values, handle) {
				class_score_input_min.value = parseFloat(values[0]).toFixed(1);
				filterNumber('minclassscore', 8)
			});
			class_score_input_min.addEventListener('change', function () {
				class_score_slider.noUiSlider.set([this.value, null]);
				filterNumber('minclassscore', 8)
			});
			let class_score_input_max = document.getElementById('maxclassscore');
			class_score_slider.noUiSlider.on('update', function (values, handle) {
				class_score_input_max.value = parseFloat(values[1]).toFixed(1);
				filterNumber('minclassscore', 8)
			});
			class_score_input_max.addEventListener('change', function () {
				class_score_slider.noUiSlider.set([null, this.value]);
				filterNumber('minclassscore', 8)
			});

			let workload_slider = document.getElementById('workload_slider');
			noUiSlider.create(workload_slider, {
				start: [0, 10],
				connect: true,
				range: {
					'min': 0,
					'max': 10
				}
			});
			let workload_input_min = document.getElementById('minhrsweek');
			workload_slider.noUiSlider.on('update', function (values, handle) {
				workload_input_min.value = parseFloat(values[0]).toFixed(1);
				filterNumber('minhrsweek', 9)
			});
			workload_input_min.addEventListener('change', function () {
				workload_slider.noUiSlider.set([this.value, null]);
				filterNumber('minhrsweek', 9)
			});
			let workload_input_max = document.getElementById('maxhrsweek');
			workload_slider.noUiSlider.on('update', function (values, handle) {
				workload_input_max.value = parseFloat(values[1]).toFixed(1);
				filterNumber('minhrsweek', 9)
			});
			workload_input_max.addEventListener('change', function () {
				workload_slider.noUiSlider.set([null, this.value]);
				filterNumber('minhrsweek', 9)
			});

			let difficulty_slider = document.getElementById('difficulty_slider');
			noUiSlider.create(difficulty_slider, {
				start: [0, 10],
				connect: true,
				range: {
					'min': 0,
					'max': 10
				}
			});
			let difficulty_input_min = document.getElementById('mindifficulty');
			difficulty_slider.noUiSlider.on('update', function (values, handle) {
				difficulty_input_min.value = parseFloat(values[0]).toFixed(1);
				filterNumber('mindifficulty', 10)
			});
			difficulty_input_min.addEventListener('change', function () {
				difficulty_slider.noUiSlider.set([this.value, null]);
				filterNumber('mindifficulty', 10)
			});
			let difficulty_input_max = document.getElementById('maxdifficulty');
			difficulty_slider.noUiSlider.on('update', function (values, handle) {
				difficulty_input_max.value = parseFloat(values[1]).toFixed(1);
				filterNumber('mindifficulty', 10)
			});
			difficulty_input_max.addEventListener('change', function () {
				difficulty_slider.noUiSlider.set([null, this.value]);
				filterNumber('mindifficulty', 10)
			});

			let enjoyment_slider = document.getElementById('enjoyment_slider');
			noUiSlider.create(enjoyment_slider, {
				start: [0, 10],
				connect: true,
				range: {
					'min': 0,
					'max': 10
				}
			});
			let enjoyment_input_min = document.getElementById('minenjoyment');
			enjoyment_slider.noUiSlider.on('update', function (values, handle) {
				enjoyment_input_min.value = parseFloat(values[0]).toFixed(1);
				filterNumber('minenjoyment', 11)
			});
			enjoyment_input_min.addEventListener('change', function () {
				enjoyment_slider.noUiSlider.set([this.value, null]);
				filterNumber('minenjoyment', 11)
			});
			let enjoyment_input_max = document.getElementById('maxenjoyment');
			enjoyment_slider.noUiSlider.on('update', function (values, handle) {
				enjoyment_input_max.value = parseFloat(values[1]).toFixed(1);
				filterNumber('minenjoyment', 11)
			});
			enjoyment_input_max.addEventListener('change', function () {
				enjoyment_slider.noUiSlider.set([null, this.value]);
				filterNumber('minenjoyment', 11)
			});

			let teacherscore_slider = document.getElementById('teacherscore_slider');
			noUiSlider.create(teacherscore_slider, {
				start: [0, 10],
				connect: true,
				range: {
					'min': 0,
					'max': 10
				}
			});
			let teacherscore_input_min = document.getElementById('minteacherscore');
			teacherscore_slider.noUiSlider.on('update', function (values, handle) {
				teacherscore_input_min.value = parseFloat(values[0]).toFixed(1);
				filterNumber('minteacherscore', 12)
			});
			teacherscore_input_min.addEventListener('change', function () {
				teacherscore_slider.noUiSlider.set([this.value, null]);
				filterNumber('minteacherscore', 12)
			});
			let teacherscore_input_max = document.getElementById('maxteacherscore');
			teacherscore_slider.noUiSlider.on('update', function (values, handle) {
				teacherscore_input_max.value = parseFloat(values[1]).toFixed(1);
				filterNumber('minteacherscore', 12)
			});
			teacherscore_input_max.addEventListener('change', function () {
				teacherscore_slider.noUiSlider.set([null, this.value]);
				filterNumber('minteacherscore', 12)
			});

			let grade_slider = document.getElementById('grade_slider');
			noUiSlider.create(grade_slider, {
				start: [0, 100],
				connect: true,
				range: {
					'min': 0,
					'max': 100
				}
			});
			let grade_input_min = document.getElementById('mingrade');
			grade_slider.noUiSlider.on('update', function (values, handle) {
				grade_input_min.value = parseFloat(values[0]).toFixed(1);
				filterNumber('mingrade', 13)
			});
			grade_input_min.addEventListener('change', function () {
				grade_slider.noUiSlider.set([this.value, null]);
				filterNumber('mingrade', 13)
			});
			let grade_input_max = document.getElementById('maxgrade');
			grade_slider.noUiSlider.on('update', function (values, handle) {
				grade_input_max.value = parseFloat(values[1]).toFixed(1);
				filterNumber('mingrade', 13)
			});
			grade_input_max.addEventListener('change', function () {
				grade_slider.noUiSlider.set([null, this.value]);
				filterNumber('mingrade', 13)
			});

			function check_scroll() {
				if (window.outerWidth < 767) {
					if(document.body.scrollTop > document.getElementById('header').offsetHeight || document.documentElement.scrollTop > document.getElementById('header').offsetHeight) {
						document.getElementById('filter_mobile').classList.add("fixed", "top-0")
						document.getElementById('index_div_id').classList.add("top-12")
						document.getElementById("footer").style.top = `48px`
					}
					else {
						document.getElementById('filter_mobile').classList.remove("fixed", "top-0")
						document.getElementById('index_div_id').classList.remove("top-12")
						document.getElementById("footer").style.top = ``
					}
				}
			}
			window.onscroll = function () {
				check_scroll()
			}
		</script>
	</body>
</html>
